"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendZETATask = void 0;
const confirm_1 = __importDefault(require("@inquirer/confirm"));
const config_1 = require("hardhat/config");
const src_1 = require("../../client/src/");
const main = async (args, hre) => {
    const [signer] = await hre.ethers.getSigners();
    if (!signer) {
        throw new Error("signer not found. Please, set the PRIVATE_KEY env variable.");
    }
    const client = new src_1.ZetaChainClient({ network: "testnet", signer });
    const isDestinationZeta = ["zeta_testnet", "zeta_mainnet"].includes(args.destination);
    let fee = "0";
    if (!isDestinationZeta) {
        const fees = await client.getFees(5000000);
        const chainID = client.chains[args.destination].chain_id;
        const chainFee = fees.messaging.find((f) => f.chainID == chainID);
        if (!chainFee) {
            throw new Error(`Cannot fetch fees for chain ID ${chainID}`);
        }
        fee = chainFee.totalFee;
        if (parseFloat(args.amount) < parseFloat(fee) && !args.ignoreChecks) {
            throw new Error(`Amount must be greater than ${fee} ZETA to cover the cross-chain fees`);
        }
    }
    const { amount, destination } = args;
    const recipient = args.recipient || signer.address;
    const chain = hre.network.name;
    const data = {
        amount,
        chain,
        destination,
        recipient,
    };
    if (args.gasLimit)
        data.gasLimit = args.gasLimit;
    if (args.json) {
        const tx = await client.sendZeta(data);
        console.log(JSON.stringify(tx, null, 2));
    }
    else {
        console.log(`
Networks:        ${chain} â†’ ${destination}
Amount sent:     ${amount} ZETA
Cross-chain fee: ${fee} ZETA
Amount received: ${(parseFloat(amount) - parseFloat(fee)).toFixed(18)} ZETA (estimated)
From address:    ${signer.address}
To address:      ${recipient}
`);
        await (0, confirm_1.default)({
            message: `Please, confirm the transaction`,
        }, { clearPromptOnDone: true });
        const tx = await client.sendZeta(data);
        console.log(`Transaction successfully broadcasted!
Hash: ${tx.hash}`);
    }
};
exports.sendZETATask = (0, config_1.task)("send-zeta", "Send ZETA tokens between connected chains", main)
    .addParam("amount", "Amount of ZETA to send")
    .addParam("destination", "Destination chain")
    .addOptionalParam("recipient", "Recipient address")
    .addFlag("json", "Output JSON")
    .addOptionalParam("gasLimit", "Gas limit")
    .addFlag("ignoreChecks", "Ignore fee check");
