import { ZetaChainClient } from "./client";
/**
 * Initiates a deposit transaction of native gas or ERC-20 assets as ZRC-20 from
 * a connected chain to ZetaChain.
 *
 * @param this - ZetaChainClient instance.
 * @param options - Deposit options.
 * @param options.sourceChain - Label of the connected chain from which the deposit is
 * made.
 * @param options.amount - Amount to be deposited in human readable form. For
 * example, 1.5 ETH is "1.5".
 * @param options.erc20 - If an ERC-20 token is being deposited, the address of
 * the ERC-20 token contract. If not provided, the deposit is assumed to be in
 * native gas token.
 * @param options.message - If a message is specified, ZetaChain will deposit
 * tokens into the `recipient` contract and call with with the message as an argument.
 * @param options.recipient - Recipient address for the deposit. If not provided,
 * the deposit is made to the signer's address.
 *
 * @returns A promise that resolves with the transaction details upon success.
 */
export declare const deposit: (this: ZetaChainClient, { chain, amount, recipient, erc20, message, }: {
    amount: string;
    chain: string;
    erc20?: string;
    message?: [string[], string[]];
    recipient?: string;
}) => Promise<any>;
